[{"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "1", "url": "http://petclinic-frontend-defaultns/", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "0"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "1", "url": "http://petclinic-frontend-defaultns/", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "1", "url": "http://petclinic-frontend-defaultns/", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "2"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "20", "url": "http://petclinic-frontend-defaultns", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "6"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "20", "url": "http://petclinic-frontend-defaultns", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "7"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "20", "url": "http://petclinic-frontend-defaultns", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "8"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "21", "url": "http://petclinic-frontend-defaultns/owners/find", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "9"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "21", "url": "http://petclinic-frontend-defaultns/owners/find", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "10"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "21", "url": "http://petclinic-frontend-defaultns/owners/find", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "11"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "HTTP/1.1 500", "pluginId": "90022", "cweid": "200", "confidence": "Medium", "wascid": "13", "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.", "messageId": "25", "url": "http://petclinic-frontend-defaultns/oups", "reference": "", "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.", "alert": "Application Error Disclosure", "param": "", "attack": "", "name": "Application Error Disclosure", "risk": "Medium", "id": "12"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "26", "url": "http://petclinic-frontend-defaultns/resources/images/favicon.png", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "13"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "29", "url": "http://petclinic-frontend-defaultns/resources/css/petclinic.css", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "14"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "31", "url": "http://petclinic-frontend-defaultns/webjars/jquery/2.2.4/jquery.min.js", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "15"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "35", "url": "http://petclinic-frontend-defaultns/webjars/jquery-ui/1.11.4/jquery-ui.min.js", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "16"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "38", "url": "http://petclinic-frontend-defaultns/webjars/bootstrap/3.3.6/js/bootstrap.min.js", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "17"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "42", "url": "http://petclinic-frontend-defaultns/resources/images/pets.png", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "18"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "43", "url": "http://petclinic-frontend-defaultns/resources/images/spring-pivotal-logo.png", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "19"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "44", "url": "http://petclinic-frontend-defaultns/owners/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "20"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "44", "url": "http://petclinic-frontend-defaultns/owners/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "21"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "44", "url": "http://petclinic-frontend-defaultns/owners/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "22"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "46", "url": "http://petclinic-frontend-defaultns/vets.html", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "23"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "46", "url": "http://petclinic-frontend-defaultns/vets.html", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "24"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "46", "url": "http://petclinic-frontend-defaultns/vets.html", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "25"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "47", "url": "http://petclinic-frontend-defaultns/owners?lastName=ZAP", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "26"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "47", "url": "http://petclinic-frontend-defaultns/owners?lastName=ZAP", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "27"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "47", "url": "http://petclinic-frontend-defaultns/owners?lastName=ZAP", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "28"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "48", "url": "http://petclinic-frontend-defaultns/owners/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "29"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "48", "url": "http://petclinic-frontend-defaultns/owners/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "30"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "48", "url": "http://petclinic-frontend-defaultns/owners/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "31"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "85", "url": "http://petclinic-frontend-defaultns/owners", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "45"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "85", "url": "http://petclinic-frontend-defaultns/owners", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "46"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "85", "url": "http://petclinic-frontend-defaultns/owners", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "47"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "118", "url": "http://petclinic-frontend-defaultns/owners/1", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "67"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "118", "url": "http://petclinic-frontend-defaultns/owners/1", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "68"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "118", "url": "http://petclinic-frontend-defaultns/owners/1", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "69"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "123", "url": "http://petclinic-frontend-defaultns/owners/2", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "70"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "123", "url": "http://petclinic-frontend-defaultns/owners/2", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "71"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "123", "url": "http://petclinic-frontend-defaultns/owners/2", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "72"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "128", "url": "http://petclinic-frontend-defaultns/owners/4", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "73"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "128", "url": "http://petclinic-frontend-defaultns/owners/4", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "74"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "128", "url": "http://petclinic-frontend-defaultns/owners/4", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "75"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "133", "url": "http://petclinic-frontend-defaultns/owners/5", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "76"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "133", "url": "http://petclinic-frontend-defaultns/owners/5", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "77"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "133", "url": "http://petclinic-frontend-defaultns/owners/5", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "78"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "134", "url": "http://petclinic-frontend-defaultns/owners/3", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "79"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "134", "url": "http://petclinic-frontend-defaultns/owners/3", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "80"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "134", "url": "http://petclinic-frontend-defaultns/owners/3", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "81"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "145", "url": "http://petclinic-frontend-defaultns/owners/6", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "82"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "145", "url": "http://petclinic-frontend-defaultns/owners/6", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "83"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "145", "url": "http://petclinic-frontend-defaultns/owners/6", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "84"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "152", "url": "http://petclinic-frontend-defaultns/owners/7", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "85"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "152", "url": "http://petclinic-frontend-defaultns/owners/7", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "86"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "152", "url": "http://petclinic-frontend-defaultns/owners/7", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "87"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "157", "url": "http://petclinic-frontend-defaultns/owners/8", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "88"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "157", "url": "http://petclinic-frontend-defaultns/owners/8", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "89"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "157", "url": "http://petclinic-frontend-defaultns/owners/8", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "90"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "162", "url": "http://petclinic-frontend-defaultns/owners/9", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "91"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "162", "url": "http://petclinic-frontend-defaultns/owners/9", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "92"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "162", "url": "http://petclinic-frontend-defaultns/owners/9", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "93"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "167", "url": "http://petclinic-frontend-defaultns/owners/10", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "94"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "167", "url": "http://petclinic-frontend-defaultns/owners/10", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "95"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "167", "url": "http://petclinic-frontend-defaultns/owners/10", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "96"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "171", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "97"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "171", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "98"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "171", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "99"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "177", "url": "http://petclinic-frontend-defaultns/owners/1/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "100"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "177", "url": "http://petclinic-frontend-defaultns/owners/1/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "101"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "177", "url": "http://petclinic-frontend-defaultns/owners/1/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "102"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "180", "url": "http://petclinic-frontend-defaultns/owners/1/pets/1/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "103"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "180", "url": "http://petclinic-frontend-defaultns/owners/1/pets/1/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "104"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "180", "url": "http://petclinic-frontend-defaultns/owners/1/pets/1/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "105"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "183", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "106"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "183", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "107"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "183", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "108"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "186", "url": "http://petclinic-frontend-defaultns/owners/1/pets/1/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "109"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "186", "url": "http://petclinic-frontend-defaultns/owners/1/pets/1/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "110"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "186", "url": "http://petclinic-frontend-defaultns/owners/1/pets/1/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "111"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "189", "url": "http://petclinic-frontend-defaultns/owners/2/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "112"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "189", "url": "http://petclinic-frontend-defaultns/owners/2/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "113"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "189", "url": "http://petclinic-frontend-defaultns/owners/2/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "114"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "192", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "115"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "192", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "116"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "192", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "117"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "195", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "118"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "195", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "119"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "195", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "120"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "198", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "121"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "198", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "122"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "198", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "123"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "201", "url": "http://petclinic-frontend-defaultns/owners/4/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "124"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "201", "url": "http://petclinic-frontend-defaultns/owners/4/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "125"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "201", "url": "http://petclinic-frontend-defaultns/owners/4/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "126"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "203", "url": "http://petclinic-frontend-defaultns/owners/4/pets/5/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "127"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "203", "url": "http://petclinic-frontend-defaultns/owners/4/pets/5/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "128"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "203", "url": "http://petclinic-frontend-defaultns/owners/4/pets/5/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "129"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "207", "url": "http://petclinic-frontend-defaultns/owners/4/pets/5/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "130"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "207", "url": "http://petclinic-frontend-defaultns/owners/4/pets/5/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "131"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "207", "url": "http://petclinic-frontend-defaultns/owners/4/pets/5/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "132"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "210", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "133"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "210", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "134"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "210", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "135"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "213", "url": "http://petclinic-frontend-defaultns/owners/3/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "136"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "213", "url": "http://petclinic-frontend-defaultns/owners/3/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "137"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "213", "url": "http://petclinic-frontend-defaultns/owners/3/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "138"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "216", "url": "http://petclinic-frontend-defaultns/owners/3/pets/4/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "139"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "216", "url": "http://petclinic-frontend-defaultns/owners/3/pets/4/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "140"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "216", "url": "http://petclinic-frontend-defaultns/owners/3/pets/4/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "141"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "219", "url": "http://petclinic-frontend-defaultns/owners/3/pets/4/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "142"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "219", "url": "http://petclinic-frontend-defaultns/owners/3/pets/4/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "143"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "219", "url": "http://petclinic-frontend-defaultns/owners/3/pets/4/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "144"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "222", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "145"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "222", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "146"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "222", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "147"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "226", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "148"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "226", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "149"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "226", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "150"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "228", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "151"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "228", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "152"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "228", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "153"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "231", "url": "http://petclinic-frontend-defaultns/owners/5/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "154"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "231", "url": "http://petclinic-frontend-defaultns/owners/5/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "155"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "231", "url": "http://petclinic-frontend-defaultns/owners/5/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "156"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "234", "url": "http://petclinic-frontend-defaultns/owners/5/pets/6/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "157"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "234", "url": "http://petclinic-frontend-defaultns/owners/5/pets/6/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "158"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "234", "url": "http://petclinic-frontend-defaultns/owners/5/pets/6/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "159"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "237", "url": "http://petclinic-frontend-defaultns/owners/5/pets/6/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "160"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "237", "url": "http://petclinic-frontend-defaultns/owners/5/pets/6/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "161"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "237", "url": "http://petclinic-frontend-defaultns/owners/5/pets/6/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "162"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "240", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "163"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "240", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "164"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "240", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "165"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "243", "url": "http://petclinic-frontend-defaultns/owners/6/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "166"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "243", "url": "http://petclinic-frontend-defaultns/owners/6/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "167"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "243", "url": "http://petclinic-frontend-defaultns/owners/6/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "168"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "246", "url": "http://petclinic-frontend-defaultns/owners/6/pets/8/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "169"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "246", "url": "http://petclinic-frontend-defaultns/owners/6/pets/8/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "170"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "246", "url": "http://petclinic-frontend-defaultns/owners/6/pets/8/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "171"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "249", "url": "http://petclinic-frontend-defaultns/owners/6/pets/8/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "172"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "249", "url": "http://petclinic-frontend-defaultns/owners/6/pets/8/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "173"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "249", "url": "http://petclinic-frontend-defaultns/owners/6/pets/8/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "174"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "252", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "175"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "252", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "176"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "252", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "177"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "255", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "178"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "255", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "179"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "255", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "180"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "257", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "181"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "257", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "182"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "257", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "183"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "261", "url": "http://petclinic-frontend-defaultns/owners/7/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "184"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "261", "url": "http://petclinic-frontend-defaultns/owners/7/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "185"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "261", "url": "http://petclinic-frontend-defaultns/owners/7/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "186"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "264", "url": "http://petclinic-frontend-defaultns/owners/7/pets/9/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "187"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "264", "url": "http://petclinic-frontend-defaultns/owners/7/pets/9/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "188"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "264", "url": "http://petclinic-frontend-defaultns/owners/7/pets/9/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "189"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "268", "url": "http://petclinic-frontend-defaultns/owners/7/pets/9/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "190"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "268", "url": "http://petclinic-frontend-defaultns/owners/7/pets/9/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "191"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "268", "url": "http://petclinic-frontend-defaultns/owners/7/pets/9/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "192"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "270", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "193"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "270", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "194"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "270", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "195"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "273", "url": "http://petclinic-frontend-defaultns/owners/8/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "196"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "273", "url": "http://petclinic-frontend-defaultns/owners/8/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "197"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "273", "url": "http://petclinic-frontend-defaultns/owners/8/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "198"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "275", "url": "http://petclinic-frontend-defaultns/owners/8/pets/10/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "199"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "275", "url": "http://petclinic-frontend-defaultns/owners/8/pets/10/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "200"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "275", "url": "http://petclinic-frontend-defaultns/owners/8/pets/10/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "201"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "279", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "202"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "279", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "203"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "279", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "204"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "282", "url": "http://petclinic-frontend-defaultns/owners/8/pets/10/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "205"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "282", "url": "http://petclinic-frontend-defaultns/owners/8/pets/10/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "206"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "282", "url": "http://petclinic-frontend-defaultns/owners/8/pets/10/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "207"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "285", "url": "http://petclinic-frontend-defaultns/owners/9/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "208"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "285", "url": "http://petclinic-frontend-defaultns/owners/9/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "209"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "285", "url": "http://petclinic-frontend-defaultns/owners/9/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "210"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "288", "url": "http://petclinic-frontend-defaultns/owners/9/pets/11/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "211"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "288", "url": "http://petclinic-frontend-defaultns/owners/9/pets/11/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "212"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "288", "url": "http://petclinic-frontend-defaultns/owners/9/pets/11/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "213"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "292", "url": "http://petclinic-frontend-defaultns/owners/9/pets/11/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "214"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "292", "url": "http://petclinic-frontend-defaultns/owners/9/pets/11/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "215"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "292", "url": "http://petclinic-frontend-defaultns/owners/9/pets/11/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "216"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "294", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "217"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "294", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "218"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "294", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "219"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "297", "url": "http://petclinic-frontend-defaultns/owners/10/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "220"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "297", "url": "http://petclinic-frontend-defaultns/owners/10/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "221"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "297", "url": "http://petclinic-frontend-defaultns/owners/10/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "222"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "300", "url": "http://petclinic-frontend-defaultns/owners/10/pets/12/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "223"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "300", "url": "http://petclinic-frontend-defaultns/owners/10/pets/12/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "224"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "300", "url": "http://petclinic-frontend-defaultns/owners/10/pets/12/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "225"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "302", "url": "http://petclinic-frontend-defaultns/owners/10/pets/12/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "226"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "302", "url": "http://petclinic-frontend-defaultns/owners/10/pets/12/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "227"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "302", "url": "http://petclinic-frontend-defaultns/owners/10/pets/12/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "228"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "306", "url": "http://petclinic-frontend-defaultns/owners/10/pets/13/visits/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "229"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "306", "url": "http://petclinic-frontend-defaultns/owners/10/pets/13/visits/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "230"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "306", "url": "http://petclinic-frontend-defaultns/owners/10/pets/13/visits/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "231"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "310", "url": "http://petclinic-frontend-defaultns/owners/10/pets/13/edit", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "232"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "310", "url": "http://petclinic-frontend-defaultns/owners/10/pets/13/edit", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "233"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "310", "url": "http://petclinic-frontend-defaultns/owners/10/pets/13/edit", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "234"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "312", "url": "http://petclinic-frontend-defaultns/owners/1/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "235"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "312", "url": "http://petclinic-frontend-defaultns/owners/1/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "236"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "312", "url": "http://petclinic-frontend-defaultns/owners/1/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "237"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "316", "url": "http://petclinic-frontend-defaultns/owners/2/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "238"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "316", "url": "http://petclinic-frontend-defaultns/owners/2/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "239"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "316", "url": "http://petclinic-frontend-defaultns/owners/2/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "240"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "323", "url": "http://petclinic-frontend-defaultns/owners/4/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "241"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "323", "url": "http://petclinic-frontend-defaultns/owners/4/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "242"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "323", "url": "http://petclinic-frontend-defaultns/owners/4/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "243"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "326", "url": "http://petclinic-frontend-defaultns/owners/3/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "244"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "326", "url": "http://petclinic-frontend-defaultns/owners/3/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "245"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "326", "url": "http://petclinic-frontend-defaultns/owners/3/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "246"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "331", "url": "http://petclinic-frontend-defaultns/owners/5/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "247"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "331", "url": "http://petclinic-frontend-defaultns/owners/5/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "248"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "331", "url": "http://petclinic-frontend-defaultns/owners/5/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "249"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "337", "url": "http://petclinic-frontend-defaultns/owners/6/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "250"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "337", "url": "http://petclinic-frontend-defaultns/owners/6/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "251"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "337", "url": "http://petclinic-frontend-defaultns/owners/6/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "252"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "342", "url": "http://petclinic-frontend-defaultns/owners/7/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "253"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "342", "url": "http://petclinic-frontend-defaultns/owners/7/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "254"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "342", "url": "http://petclinic-frontend-defaultns/owners/7/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "255"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "348", "url": "http://petclinic-frontend-defaultns/owners/8/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "256"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "348", "url": "http://petclinic-frontend-defaultns/owners/8/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "257"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "348", "url": "http://petclinic-frontend-defaultns/owners/8/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "258"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "352", "url": "http://petclinic-frontend-defaultns/owners/9/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "259"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "352", "url": "http://petclinic-frontend-defaultns/owners/9/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "260"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "352", "url": "http://petclinic-frontend-defaultns/owners/9/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "261"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "POST", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "355", "url": "http://petclinic-frontend-defaultns/owners/10/pets/new", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "262"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "POST", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "355", "url": "http://petclinic-frontend-defaultns/owners/10/pets/new", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "263"}, {"sourceid": "3", "other": "", "method": "POST", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "355", "url": "http://petclinic-frontend-defaultns/owners/10/pets/new", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "264"}, {"sourceid": "1", "other": "The page results were successfully manipulated using the boolean conditions [query AND 1=1 -- ] and [query AND 1=2 -- ]\nThe parameter value being modified was NOT stripped from the HTML output for the purposes of the comparison\nData was returned for the original parameter.\nThe vulnerability was detected by successfully restricting the data originally returned, by manipulating the parameter", "method": "GET", "evidence": "", "pluginId": "40018", "cweid": "89", "confidence": "Medium", "wascid": "19", "description": "SQL injection may be possible.", "messageId": "17811", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit?query=query+AND+1%3D1+--+", "reference": "https://www.owasp.org/index.php/Top_10_2010-A1\nhttps://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet", "solution": "Do not trust client side input, even if there is client side validation in place.  \nIn general, type check all data on the server side.\nIf the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\nIf the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\nIf database Stored Procedures can be used, use them.\nDo *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality!\nDo not create dynamic SQL queries using simple string concatenation.\nEscape all data received from the client.\nApply a 'whitelist' of allowed characters, or a 'blacklist' of disallowed characters in user input.\nApply the principle of least privilege by using the least privileged database user possible.\nIn particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\nGrant the minimum database access that is necessary for the application.", "alert": "SQL Injection", "param": "query", "attack": "query AND 1=1 -- ", "name": "SQL Injection", "risk": "High", "id": "265"}, {"sourceid": "3", "other": "The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: \nX-XSS-Protection: 1; mode=block\nX-XSS-Protection: 1; report=http://www.example.com/xss\nThe following values would disable it:\nX-XSS-Protection: 0\nThe X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).\nNote that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).", "method": "GET", "evidence": "", "pluginId": "10016", "cweid": "933", "confidence": "Medium", "wascid": "14", "description": "Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server", "messageId": "18873", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit?query=query+AND+1%3D1+--+", "reference": "https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/", "solution": "Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.", "alert": "Web Browser XSS Protection Not Enabled", "param": "X-XSS-Protection", "attack": "", "name": "Web Browser XSS Protection Not Enabled", "risk": "Low", "id": "349"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scanner will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "18873", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit?query=query+AND+1%3D1+--+", "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://www.owasp.org/index.php/List_of_useful_HTTP_headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "X-Content-Type-Options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "350"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "16", "confidence": "Medium", "wascid": "15", "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.", "messageId": "18873", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit?query=query+AND+1%3D1+--+", "reference": "http://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx", "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).", "alert": "X-Frame-Options Header Not Set", "param": "X-Frame-Options", "attack": "", "name": "X-Frame-Options Header Not Set", "risk": "Medium", "id": "351"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59107", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/1/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2189\r\nReferer: http://petclinic-frontend-defaultns/owners/1/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "502"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59109", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/1/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2187\r\nReferer: http://petclinic-frontend-defaultns/owners/1/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "503"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59117", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/1/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2177\r\nReferer: http://petclinic-frontend-defaultns/owners/1/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "504"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59120", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/1/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2188\r\nReferer: http://petclinic-frontend-defaultns/owners/1/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "505"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59131", "url": "http://petclinic-frontend-defaultns/owners/1/pets/1/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/1/pets/1/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2140\r\nReferer: http://petclinic-frontend-defaultns/owners/1/pets/1/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "506"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59150", "url": "http://petclinic-frontend-defaultns/owners/1/pets/1/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/1/pets/1/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2136\r\nReferer: http://petclinic-frontend-defaultns/owners/1/pets/1/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "507"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59178", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/10/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2192\r\nReferer: http://petclinic-frontend-defaultns/owners/10/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "508"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59180", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/10/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2191\r\nReferer: http://petclinic-frontend-defaultns/owners/10/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "509"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59182", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/10/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2177\r\nReferer: http://petclinic-frontend-defaultns/owners/10/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "510"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59184", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/10/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2190\r\nReferer: http://petclinic-frontend-defaultns/owners/10/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "511"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59203", "url": "http://petclinic-frontend-defaultns/owners/10/pets/12/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/10/pets/12/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2141\r\nReferer: http://petclinic-frontend-defaultns/owners/10/pets/12/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "512"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59214", "url": "http://petclinic-frontend-defaultns/owners/10/pets/12/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/10/pets/12/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2137\r\nReferer: http://petclinic-frontend-defaultns/owners/10/pets/12/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "513"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59231", "url": "http://petclinic-frontend-defaultns/owners/10/pets/13/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/10/pets/13/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2141\r\nReferer: http://petclinic-frontend-defaultns/owners/10/pets/13/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "514"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59243", "url": "http://petclinic-frontend-defaultns/owners/10/pets/13/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/10/pets/13/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2137\r\nReferer: http://petclinic-frontend-defaultns/owners/10/pets/13/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "515"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59277", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/2/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2189\r\nReferer: http://petclinic-frontend-defaultns/owners/2/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "516"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59279", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/2/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2189\r\nReferer: http://petclinic-frontend-defaultns/owners/2/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "517"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59281", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/2/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2177\r\nReferer: http://petclinic-frontend-defaultns/owners/2/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "518"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59283", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/2/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2183\r\nReferer: http://petclinic-frontend-defaultns/owners/2/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "519"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59300", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/2/pets/2/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2144\r\nReferer: http://petclinic-frontend-defaultns/owners/2/pets/2/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "520"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59315", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/2/pets/2/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2136\r\nReferer: http://petclinic-frontend-defaultns/owners/2/pets/2/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "521"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59354", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/3/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2191\r\nReferer: http://petclinic-frontend-defaultns/owners/3/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "522"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59359", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/3/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2189\r\nReferer: http://petclinic-frontend-defaultns/owners/3/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "523"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59361", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/3/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2181\r\nReferer: http://petclinic-frontend-defaultns/owners/3/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "524"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59363", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/3/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2189\r\nReferer: http://petclinic-frontend-defaultns/owners/3/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "525"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59373", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/3/pets/3/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2140\r\nReferer: http://petclinic-frontend-defaultns/owners/3/pets/3/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "526"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59392", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/3/pets/3/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2136\r\nReferer: http://petclinic-frontend-defaultns/owners/3/pets/3/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "527"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59401", "url": "http://petclinic-frontend-defaultns/owners/3/pets/4/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/3/pets/4/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2140\r\nReferer: http://petclinic-frontend-defaultns/owners/3/pets/4/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "528"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59422", "url": "http://petclinic-frontend-defaultns/owners/3/pets/4/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/3/pets/4/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2136\r\nReferer: http://petclinic-frontend-defaultns/owners/3/pets/4/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "529"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59452", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/4/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2184\r\nReferer: http://petclinic-frontend-defaultns/owners/4/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "530"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59454", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/4/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2185\r\nReferer: http://petclinic-frontend-defaultns/owners/4/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "531"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59456", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/4/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2174\r\nReferer: http://petclinic-frontend-defaultns/owners/4/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "532"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59458", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/4/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2183\r\nReferer: http://petclinic-frontend-defaultns/owners/4/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "533"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59471", "url": "http://petclinic-frontend-defaultns/owners/4/pets/5/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/4/pets/5/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2143\r\nReferer: http://petclinic-frontend-defaultns/owners/4/pets/5/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "534"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59485", "url": "http://petclinic-frontend-defaultns/owners/4/pets/5/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/4/pets/5/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2136\r\nReferer: http://petclinic-frontend-defaultns/owners/4/pets/5/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "535"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59513", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/5/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2187\r\nReferer: http://petclinic-frontend-defaultns/owners/5/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "536"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59515", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/5/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2184\r\nReferer: http://petclinic-frontend-defaultns/owners/5/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "537"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59517", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/5/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2176\r\nReferer: http://petclinic-frontend-defaultns/owners/5/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "538"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59519", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/5/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2185\r\nReferer: http://petclinic-frontend-defaultns/owners/5/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "539"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59534", "url": "http://petclinic-frontend-defaultns/owners/5/pets/6/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/5/pets/6/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2142\r\nReferer: http://petclinic-frontend-defaultns/owners/5/pets/6/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "540"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59543", "url": "http://petclinic-frontend-defaultns/owners/5/pets/6/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/5/pets/6/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2136\r\nReferer: http://petclinic-frontend-defaultns/owners/5/pets/6/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "541"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59573", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/6/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2184\r\nReferer: http://petclinic-frontend-defaultns/owners/6/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "542"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59578", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/6/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2181\r\nReferer: http://petclinic-frontend-defaultns/owners/6/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "543"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59580", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/6/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2173\r\nReferer: http://petclinic-frontend-defaultns/owners/6/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "544"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59582", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/6/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2182\r\nReferer: http://petclinic-frontend-defaultns/owners/6/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "545"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59596", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/6/pets/7/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2140\r\nReferer: http://petclinic-frontend-defaultns/owners/6/pets/7/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "546"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59610", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/6/pets/7/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2136\r\nReferer: http://petclinic-frontend-defaultns/owners/6/pets/7/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "547"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59623", "url": "http://petclinic-frontend-defaultns/owners/6/pets/8/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/6/pets/8/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2140\r\nReferer: http://petclinic-frontend-defaultns/owners/6/pets/8/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "548"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59638", "url": "http://petclinic-frontend-defaultns/owners/6/pets/8/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/6/pets/8/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2136\r\nReferer: http://petclinic-frontend-defaultns/owners/6/pets/8/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "549"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59661", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/7/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2181\r\nReferer: http://petclinic-frontend-defaultns/owners/7/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "550"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59663", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/7/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2180\r\nReferer: http://petclinic-frontend-defaultns/owners/7/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "551"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59665", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/7/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2171\r\nReferer: http://petclinic-frontend-defaultns/owners/7/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "552"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59667", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/7/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2179\r\nReferer: http://petclinic-frontend-defaultns/owners/7/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "553"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59686", "url": "http://petclinic-frontend-defaultns/owners/7/pets/9/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/7/pets/9/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2141\r\nReferer: http://petclinic-frontend-defaultns/owners/7/pets/9/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "554"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59701", "url": "http://petclinic-frontend-defaultns/owners/7/pets/9/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/7/pets/9/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2136\r\nReferer: http://petclinic-frontend-defaultns/owners/7/pets/9/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "555"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59729", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/8/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2184\r\nReferer: http://petclinic-frontend-defaultns/owners/8/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "556"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59731", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/8/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2181\r\nReferer: http://petclinic-frontend-defaultns/owners/8/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "557"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59733", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/8/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2176\r\nReferer: http://petclinic-frontend-defaultns/owners/8/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "558"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59735", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/8/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2182\r\nReferer: http://petclinic-frontend-defaultns/owners/8/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "559"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59752", "url": "http://petclinic-frontend-defaultns/owners/8/pets/10/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/8/pets/10/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2141\r\nReferer: http://petclinic-frontend-defaultns/owners/8/pets/10/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "560"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59764", "url": "http://petclinic-frontend-defaultns/owners/8/pets/10/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/8/pets/10/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2137\r\nReferer: http://petclinic-frontend-defaultns/owners/8/pets/10/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "561"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59818", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "firstName", "attack": "POST http://petclinic-frontend-defaultns/owners/9/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2192\r\nReferer: http://petclinic-frontend-defaultns/owners/9/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "562"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59821", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "lastName", "attack": "POST http://petclinic-frontend-defaultns/owners/9/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2188\r\nReferer: http://petclinic-frontend-defaultns/owners/9/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "563"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59824", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "address", "attack": "POST http://petclinic-frontend-defaultns/owners/9/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2177\r\nReferer: http://petclinic-frontend-defaultns/owners/9/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "564"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59827", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "city", "attack": "POST http://petclinic-frontend-defaultns/owners/9/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2190\r\nReferer: http://petclinic-frontend-defaultns/owners/9/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "565"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59849", "url": "http://petclinic-frontend-defaultns/owners/9/pets/11/edit", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/9/pets/11/edit HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2142\r\nReferer: http://petclinic-frontend-defaultns/owners/9/pets/11/edit\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "566"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "59871", "url": "http://petclinic-frontend-defaultns/owners/9/pets/11/visits/new", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "description", "attack": "POST http://petclinic-frontend-defaultns/owners/9/pets/11/visits/new HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2137\r\nReferer: http://petclinic-frontend-defaultns/owners/9/pets/11/visits/new\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "567"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60177", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "568"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60186", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "569"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60210", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s\n", "name": "Format String Error", "risk": "Medium", "id": "570"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60235", "url": "http://petclinic-frontend-defaultns/owners/1/pets/1/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "571"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60345", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "572"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60362", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "573"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60373", "url": "http://petclinic-frontend-defaultns/owners/10/pets/12/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "574"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60398", "url": "http://petclinic-frontend-defaultns/owners/10/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "575"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60486", "url": "http://petclinic-frontend-defaultns/owners/10/pets/13/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "576"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60585", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "577"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60596", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "578"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60614", "url": "http://petclinic-frontend-defaultns/owners/2/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "579"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60651", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "580"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60768", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "581"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60785", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "582"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60806", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s\n", "name": "Format String Error", "risk": "Medium", "id": "583"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60820", "url": "http://petclinic-frontend-defaultns/owners/3/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "584"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "60902", "url": "http://petclinic-frontend-defaultns/owners/3/pets/4/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "585"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61030", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "586"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61040", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "587"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61058", "url": "http://petclinic-frontend-defaultns/owners/4/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "588"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61081", "url": "http://petclinic-frontend-defaultns/owners/4/pets/5/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "589"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61188", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "590"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61196", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "591"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61210", "url": "http://petclinic-frontend-defaultns/owners/5/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "592"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61243", "url": "http://petclinic-frontend-defaultns/owners/5/pets/6/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "593"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61362", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "594"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61375", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "595"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61397", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s%n%s\n", "name": "Format String Error", "risk": "Medium", "id": "596"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61406", "url": "http://petclinic-frontend-defaultns/owners/6/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "597"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61495", "url": "http://petclinic-frontend-defaultns/owners/6/pets/8/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "598"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61614", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "599"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61620", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "600"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61640", "url": "http://petclinic-frontend-defaultns/owners/7/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "601"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61676", "url": "http://petclinic-frontend-defaultns/owners/7/pets/9/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "602"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61770", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "603"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61775", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "604"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61793", "url": "http://petclinic-frontend-defaultns/owners/8/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "605"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61821", "url": "http://petclinic-frontend-defaultns/owners/8/pets/10/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "606"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61917", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "firstName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "607"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61926", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "lastName", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "608"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61941", "url": "http://petclinic-frontend-defaultns/owners/9/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "609"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "61965", "url": "http://petclinic-frontend-defaultns/owners/9/pets/11/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "610"}, {"sourceid": "1", "other": "The page results were successfully manipulated using the boolean conditions [query AND 1=1 -- ] and [query AND 1=2 -- ]\nThe parameter value being modified was NOT stripped from the HTML output for the purposes of the comparison\nData was returned for the original parameter.\nThe vulnerability was detected by successfully restricting the data originally returned, by manipulating the parameter", "method": "GET", "evidence": "", "pluginId": "40018", "cweid": "89", "confidence": "Medium", "wascid": "19", "description": "SQL injection may be possible.", "messageId": "68395", "url": "http://petclinic-frontend-defaultns/owners/2/edit?query=query+AND+1%3D1+--+", "reference": "https://www.owasp.org/index.php/Top_10_2010-A1\nhttps://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet", "solution": "Do not trust client side input, even if there is client side validation in place.  \nIn general, type check all data on the server side.\nIf the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\nIf the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\nIf database Stored Procedures can be used, use them.\nDo *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality!\nDo not create dynamic SQL queries using simple string concatenation.\nEscape all data received from the client.\nApply a 'whitelist' of allowed characters, or a 'blacklist' of disallowed characters in user input.\nApply the principle of least privilege by using the least privileged database user possible.\nIn particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\nGrant the minimum database access that is necessary for the application.", "alert": "SQL Injection", "param": "query", "attack": "query AND 1=1 -- ", "name": "SQL Injection", "risk": "High", "id": "611"}, {"sourceid": "1", "other": "The page results were successfully manipulated using the boolean conditions [query AND 1=1 -- ] and [query AND 1=2 -- ]\nThe parameter value being modified was stripped from the HTML output for the purposes of the comparison\nData was returned for the original parameter.\nThe vulnerability was detected by successfully restricting the data originally returned, by manipulating the parameter", "method": "GET", "evidence": "", "pluginId": "40018", "cweid": "89", "confidence": "Medium", "wascid": "19", "description": "SQL injection may be possible.", "messageId": "68622", "url": "http://petclinic-frontend-defaultns/owners/2/pets/2/edit?query=query+AND+1%3D1+--+", "reference": "https://www.owasp.org/index.php/Top_10_2010-A1\nhttps://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet", "solution": "Do not trust client side input, even if there is client side validation in place.  \nIn general, type check all data on the server side.\nIf the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\nIf the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\nIf database Stored Procedures can be used, use them.\nDo *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality!\nDo not create dynamic SQL queries using simple string concatenation.\nEscape all data received from the client.\nApply a 'whitelist' of allowed characters, or a 'blacklist' of disallowed characters in user input.\nApply the principle of least privilege by using the least privileged database user possible.\nIn particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\nGrant the minimum database access that is necessary for the application.", "alert": "SQL Injection", "param": "query", "attack": "query AND 1=1 -- ", "name": "SQL Injection", "risk": "High", "id": "612"}, {"sourceid": "1", "other": "The page results were successfully manipulated using the boolean conditions [query' AND '1'='1' -- ] and [query' OR '1'='1' -- ]\nThe parameter value being modified was stripped from the HTML output for the purposes of the comparison\nData was NOT returned for the original parameter.\nThe vulnerability was detected by successfully retrieving more data than originally returned, by manipulating the parameter", "method": "GET", "evidence": "", "pluginId": "40018", "cweid": "89", "confidence": "Medium", "wascid": "19", "description": "SQL injection may be possible.", "messageId": "69824", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit?query=query%27+AND+%271%27%3D%271%27+--+", "reference": "https://www.owasp.org/index.php/Top_10_2010-A1\nhttps://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet", "solution": "Do not trust client side input, even if there is client side validation in place.  \nIn general, type check all data on the server side.\nIf the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\nIf the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\nIf database Stored Procedures can be used, use them.\nDo *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality!\nDo not create dynamic SQL queries using simple string concatenation.\nEscape all data received from the client.\nApply a 'whitelist' of allowed characters, or a 'blacklist' of disallowed characters in user input.\nApply the principle of least privilege by using the least privileged database user possible.\nIn particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\nGrant the minimum database access that is necessary for the application.", "alert": "SQL Injection", "param": "query", "attack": "query' OR '1'='1' -- ", "name": "SQL Injection", "risk": "High", "id": "613"}, {"sourceid": "1", "other": "The page results were successfully manipulated using the boolean conditions [query AND 1=1 -- ] and [query AND 1=2 -- ]\nThe parameter value being modified was stripped from the HTML output for the purposes of the comparison\nData was returned for the original parameter.\nThe vulnerability was detected by successfully restricting the data originally returned, by manipulating the parameter", "method": "GET", "evidence": "", "pluginId": "40018", "cweid": "89", "confidence": "Medium", "wascid": "19", "description": "SQL injection may be possible.", "messageId": "73032", "url": "http://petclinic-frontend-defaultns/owners/5/edit?query=query+AND+1%3D1+--+", "reference": "https://www.owasp.org/index.php/Top_10_2010-A1\nhttps://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet", "solution": "Do not trust client side input, even if there is client side validation in place.  \nIn general, type check all data on the server side.\nIf the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\nIf the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\nIf database Stored Procedures can be used, use them.\nDo *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality!\nDo not create dynamic SQL queries using simple string concatenation.\nEscape all data received from the client.\nApply a 'whitelist' of allowed characters, or a 'blacklist' of disallowed characters in user input.\nApply the principle of least privilege by using the least privileged database user possible.\nIn particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\nGrant the minimum database access that is necessary for the application.", "alert": "SQL Injection", "param": "query", "attack": "query AND 1=1 -- ", "name": "SQL Injection", "risk": "High", "id": "614"}, {"sourceid": "1", "other": "Potential Buffer Overflow.  The script closed the connection and threw a 500 Internal Server Error", "method": "POST", "evidence": "", "pluginId": "30001", "cweid": "120", "confidence": "Medium", "wascid": "7", "description": "Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. ", "messageId": "99325", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit?query=query+AND+1%3D1+--+", "reference": "https://www.owasp.org/index.php/Buffer_overflow_attack", "solution": "Rewrite the background program using proper return length checking.  This will require a recompile of the background executable.", "alert": "Buffer Overflow", "param": "name", "attack": "POST http://petclinic-frontend-defaultns/owners/3/pets/3/edit?query=query+AND+1%3D1+--+ HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 2140\r\nReferer: http://petclinic-frontend-defaultns/owners/3/pets/3/edit?query=query+AND+1%3D1+--+\r\nHost: petclinic-frontend-defaultns\r\n\r\n", "name": "Buffer Overflow", "risk": "Medium", "id": "640"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "99726", "url": "http://petclinic-frontend-defaultns/owners/1/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "city", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "684"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "100108", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "698"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "100128", "url": "http://petclinic-frontend-defaultns/owners/3/pets/3/edit?query=query+AND+1%3D1+--+", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "699"}, {"sourceid": "1", "other": "Potential Format String Error.  The script closed the connection on a /%s and /%x", "method": "POST", "evidence": "", "pluginId": "30002", "cweid": "134", "confidence": "Medium", "wascid": "6", "description": "A Format String error occurs when the submitted data of an input string is evaluated as a command by the application. ", "messageId": "100488", "url": "http://petclinic-frontend-defaultns/owners/6/pets/7/edit", "reference": "https://www.owasp.org/index.php/Format_string_attack", "solution": "Rewrite the background program using proper deletion of bad character strings.  This will require a recompile of the background executable.", "alert": "Format String Error", "param": "name", "attack": "ZAP%x%x%x%x%x%x%x%x%x%x\n", "name": "Format String Error", "risk": "Medium", "id": "712"}]